apply plugin: 'com.android.application'

static def releaseTime() {
    return new Date().format("MMddHHmm", TimeZone.getTimeZone("GMT+8"))
}
android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
//    compileOptions.encoding = "GBK"
    packagingOptions{
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    defaultConfig {
        applicationId "com.dingli.diandiaan"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 13
        versionName "1.3.0"
        multiDexEnabled true
        buildConfigField("boolean", "DIANTEACHER_LIVE", "true");
        buildConfigField("boolean", "DIANTEACHER_FALSELIVE", "false");
        buildConfigField("boolean", "DIANTEACHER_DEV", "false");
        buildConfigField("boolean", "DIANTEACHER_TEST", "false");
    }
    signingConfigs {
        release {
            storeFile file("../diandian.jks")
            storePassword "diandian"
            keyAlias "zhanghaitao"
            keyPassword "diandian"
        }
    }
    buildTypes {
        debug{
            signingConfig signingConfigs.release
        }
        DIANTEACHERTest {
            buildConfigField("boolean", "DIANTEACHER_LIVE", "false");
            buildConfigField("boolean", "DIANTEACHER_FALSELIVE", "false");
            buildConfigField("boolean", "DIANTEACHER_DEV", "false");
            buildConfigField("boolean", "DIANSTEACHER_TEST", "true");


            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (variant.buildType.name == 'DIANTEACHERTest') {
                            def fileName = "DIANTEACHER_test_v${defaultConfig.versionName}_${releaseTime()}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }
        DIANTEACHERDev {
            buildConfigField("boolean", "DIANTEACHER_LIVE", "false");
            buildConfigField("boolean", "DIANTEACHER_FALSELIVE", "false");
            buildConfigField("boolean", "DIANTEACHER_DEV", "true");
            buildConfigField("boolean", "DIANTEACHER_TEST", "false");

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (variant.buildType.name == 'DIANTEACHERDev') {
                            def fileName = "DIANTEACHER_dev_v${defaultConfig.versionName}_${releaseTime()}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }
        DIANTEACHERfalselive {
            buildConfigField("boolean", "DIANTEACHER_LIVE", "false");
            buildConfigField("boolean", "DIANTEACHER_FALSELIVE", "true");
            buildConfigField("boolean", "DIANTEACHER_DEV", "false");
            buildConfigField("boolean", "DIANTEACHER_TEST", "false");

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (variant.buildType.name == 'DIANTEACHERfalselive') {
                            def fileName = "DIANTEACHER_falselive_v${defaultConfig.versionName}_${releaseTime()}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }
        release {
            buildConfigField("boolean", "DIANTEACHER_LIVE", "true");
            buildConfigField("boolean", "DIANTEACHER_FALSELIVE", "false");
            buildConfigField("boolean", "DIANTEACHER_DEV", "false");
            buildConfigField("boolean", "DIANTEACHER_TEST", "false");

            zipAlignEnabled true

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (variant.buildType.name == 'release'){
                            def fileName = "DIANTEACHER_live_v${defaultConfig.versionName}_${releaseTime()}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.3.1'
//    compile 'com.alibaba:fastjson:latest.integration'
    compile 'com.alibaba:fastjson:1.2.31'
    compile 'com.alibaba:fastjson:1.1.57.android'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.0-beta1'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'cn.aigestudio.wheelpicker:WheelPicker:1.1.1'
    compile 'com.kyleduo.switchbutton:library:1.4.2'
    compile 'com.lzy.net:okgo:2.1.4'
    compile 'com.android.support:support-annotations:25.3.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.pgyersdk:sdk:2.4.0'
    compile project(':PushSDK')
    compile 'com.jaredrummler:material-spinner:1.1.0'
    compile 'com.youth.banner:banner:1.4.9'
    compile 'com.github.chenBingX:SuperTextView:v1.1'
    compile 'com.qiniu:qiniu-android-sdk:7.3.+'
    compile 'pub.devrel:easypermissions:0.4.0'
    compile 'com.google.zxing:android-core:3.3.0'
    compile 'com.google.zxing:core:3.3.0'
    compile 'com.android.support:multidex:1.0.1'

//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
//    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
//    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
}
